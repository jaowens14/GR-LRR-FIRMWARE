//====================================================
// title block
//====================================================
/*  
 *  Author: Jacob Owens - Avid Product Development
 *  Customer: Vestas
 *  Date: 08082023
 */
//====================================================
// end title block
//====================================================


//====================================================
// shared data
//====================================================
struct shared_data {
  long stepperSpeed = 0; // buffer
  int stepperCommand = 0; // stepper state : 0 = stopped, 1 = forward, 2 = backward
};
volatile struct shared_data * const xfr_ptr = (struct shared_data *)0x38001000;
//====================================================
// end shared data
//====================================================


//====================================================
// included libraries
//====================================================
#include <Arduino.h>
//====================================================
// end included libraries
//====================================================


//====================================================
// wifi and websockets definitions
//====================================================
//====================================================
// end wifi and websockets definitions
//====================================================


//====================================================
// stepper definitions
//====================================================
#include <AccelStepper.h>

#define STEPPER1_STEP_PIN 5
#define STEPPER1_DIRECTION_PIN 4
AccelStepper stepper1(AccelStepper::FULL2WIRE, STEPPER1_STEP_PIN, STEPPER1_DIRECTION_PIN);

#define STEPPER2_STEP_PIN 3
#define STEPPER2_DIRECTION_PIN 2
AccelStepper stepper2(AccelStepper::FULL2WIRE, STEPPER2_STEP_PIN, STEPPER2_DIRECTION_PIN);

int stepperCommand = 0;
long stepperSpeed = 0;

//====================================================
// end stepper definitions
//====================================================


//====================================================
// ultrasonic definitions
//====================================================
//====================================================
// end ultrasonic definitions
//====================================================


//====================================================
// led definitions
//====================================================
//====================================================
// end led definitions
//====================================================




//====================================================
// relay definitions
//====================================================
//====================================================
// end relay definitions
//====================================================




//====================================================
// json definitions
//====================================================
//====================================================
// end json definitions
//====================================================




//====================================================
// ip address definitions
//====================================================
//====================================================
// end ip address definitions
//====================================================




//====================================================
// function prototypes
//====================================================
void setup(void);
void loop(void);
void StepperMachine(void);
//====================================================
// end function prototypes
//====================================================




//====================================================
// states
//====================================================
enum StepperStates { 
  STEPPER_STOPPED, // 0
  STEPPER_FORWARD, // 1
  STEPPER_BACKWARD // 2
};
StepperStates stepperState;
//====================================================
// end states
//====================================================



//====================================================
// objects
//====================================================
//====================================================
// end objects
//====================================================




//====================================================
// timer
//====================================================
//====================================================
// end timer
//====================================================




//====================================================
// setup
//====================================================
void setup() {
  // stepper setup
  stepper1.setMaxSpeed(10000000.0);
  stepper1.setAcceleration(750000.0);

  stepper2.setMaxSpeed(10000000.0);
  stepper2.setAcceleration(750000.0);
  // end stepper setup
}
//====================================================
// end setup
//====================================================




//====================================================
// main loop
//====================================================
void loop() {

  StepperMachine();

}
//====================================================
// end main loop
//====================================================




//====================================================
// functions
//====================================================


//====================================================
// stepper machine
//====================================================
void StepperMachine(void) {
  stepperSpeed = xfr_ptr->stepperSpeed;
  stepperCommand = xfr_ptr->stepperCommand;
  switch(stepperCommand) {
    case 0:
      stepper1.stop();
      stepper2.stop();

    break;
    case 1:
      stepper1.setSpeed(-stepperSpeed);
      stepper2.setSpeed(stepperSpeed);

      stepper1.runSpeed();
      stepper2.runSpeed();
    break;
    case 2:
      stepper1.setSpeed(stepperSpeed);
      stepper2.setSpeed(-stepperSpeed);
      stepper1.runSpeed();
      stepper2.runSpeed();

    break;
    default:
    break;
  }
  
}
//====================================================
// end stepper machine
//====================================================



//====================================================
// end functions
//====================================================
